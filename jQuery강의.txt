jQuery
	- 자바스크립트 라이브러리
	- 자바스크립트 코딩에서 필요한 작업을 빠르고 일관된 방법으로 처리한다
	- 크로스-브라우징 지원
	- 강력한 셀렉터를 지원한다
	- DOM 조작이 간편
	- 이벤트처리가 간단하다
	- ajax 처리가 간단하다
	- 묵시적인 반복을 수행한다
	- 메서드체이닝을 지원한다

jQuery Selector
	- Document에서 Element를 선택할 때 사용한다
	- CSS 선택자 표현과 호환된다
	- 다양한 확장선택자를 제공한다
	
엘리먼트
	- 텍스트 컨텐츠 읽기/쓰기
		text(), text(값)
	
	- html 컨텐츠 읽기/쓰기
		html(), html(값)
		
	- 폼의 값 읽기/쓰기
		val(), val(값)
	
	- 속성값 읽기/쓰기
		attr(이름), attr(이름, 값)
	
	- 클래스값 읽기/쓰기
		addClass(이름), removeClass(이름), toggleClass(이름)

jQuery 셀렉터
	- 기본셀렉터
		*						모든 엘리먼트 반환
		tag						태그명과 일치하는 모든 엘리먼트 반환
		.class					지정된 class값을 가지는 모든 엘리먼트 반환
		#id						지정된 id값을 가진 엘리먼트 반환
	
	- 계층 선택자
		선택자1   선택자2		선택자1의 자손중에서 선택자2에 해당하는 엘리먼트들 반환
		선택자1 + 선택자2		선택자1 바로 다음에 있는 엘리먼트 중에서 선택자2에 해당하는 엘리먼트 반환
		선택자1 > 선택자2		선택자1의 자식중에서 선택자 2에 해당하는 엘리먼트들 반환
		선택자1 ~ 선택자2		선택자1 뒤에 존재하는 형제중에서 선택자2에 해당하는 엘리먼트들 반환
	
	- 필터 선택자
		선택자1:first			첫 번째 엘리먼트 반환
		선택자1:last			마지막 번째 엘리먼트 반환
		선택자1:even			짝수 번 째 엘리먼트들 반환
		선택자1:odd				홀수 번 째 엘리먼트들 반환
		선택자1:eq(index)		지정된 index 번 째 엘리먼트들 반환
		선택자1:gt(index)		지정된 index 다음번째 엘리먼트들 반환
		선택자1:lt(index)		지정된 index 이전번째 엘리먼트들 반환
		선택자1:not(선택자2)	선택자와 일치하지 않는 엘리먼트들 반환

	-자식요소 필터 선택자
		선택자: first-child		첫 번째 자식 엘리먼트
		선택자: last-child		마지막 자식 엘리먼트
		선택자: eq(index)		index와 동일한 순서의 엘리먼트
		선택자: gt(index)		index보다 큰 순서의 엘리먼트
		선택자: lt(index)		index보다 작은 순서의 엘리먼트
		
	- 속성 선택자
		[속성명]				지정된 속성을 포함하고 있는 엘리먼트 찾기
		[속성명='값']			지정된 속성이 지정된 값과 일치하는 엘리먼트 찾기
		[속성명^='값']			지정된 속성이 지정된 값으로 시작하는 엘리먼트 찾기
		[속성명$='값']			지정된 속성이 지정된 값으로 끝나는 엘리먼트 찾기
		[속성명*='값']			지정된 속성이 지정된 값을 포함하고 있는 엘리먼트 찾기
		[속성명~='값']			지정된 속성이 지정된 단어를 포함하는 엘리먼트 찾기
		
	- 컨텐츠 필터 선택자
		div:containts('값')		지정된 값을 포함하는 엘리먼트 찾기
	
	
$() 함수 사용법
	$('셀렉터')
		- 셀렉터 표현식에 해당하는 엘리먼트를 검색
		- $('셀렉터').조작함수()
		- $('셀렉터').이벤트등록함수(function() { ... } );
	
	$(엘리먼트)
		- 평범한 엘리먼트 객체를 jQuery결과집합 객체를 만든다
		- 평범한 엘리먼트 객체를 대상으로 jQuery조작함수를 사용할 수 있게 한다
		- $(엘리먼트).조작함수();
		- $(엘리먼트).이벤트등록함수(function() { ... } )
		
	$(function() { } )
		- 웹 페이지가 준비되면 자동으로 함수가 실행된다
		- 웹 페이지가 준비된다 ---> html 해석해서 Document 객체를 사용가능한 시점
	
	each()
		- 조회된 jQuery 결과집합의 엘리먼트를 순회할 수 있다
		
jquery 함수
	$(셀렉터).text()	내부 텍스트
			.html()		내부 html
			.attr()		속성값
			.prop()		프로퍼티 - 값 (check=true)
			
			.before()	엘리먼트 앞에 새로운 컨텐츠를 추가
			.after()	엘리먼트 뒤에 새로운 컨텐츠를 추가
			.prepend()	엘리먼트 첫번째 자식으로 컨텐츠 추가
			.append()	엘리먼트 막내자식으로 컨텐츠 추가
			.remove()	선택된 엘리먼트 삭제
			.empty()	선택된 엘리먼트 모든 자식 삭제
			.clone()	선택된 엘리먼트 복제본 만들기
			
	DOM 순회함수
		$(셀렉터).prev()
		$(셀렉터).prevAll()
		
		
	필터함수
		$(선택자1).find(선택자2)				
			선택자1의 자식중에서 선택자2에 해당하는 엘리먼트 찾기
		
		$(선택자1).filter(선택자2)				
			선택자1로 선택된 엘리먼트 중에서 선택자
		
		$(선택자1).eq(index)					
			선택자1로 선택된 엘리먼트 중에 지정된 index와 일치하는 엘리먼트 찾기
		
		$(선택자1).lt(index)					
			선택자1로 선택된 엘리먼트 중에 지정된 index보다 앞에 위치하는 엘리먼트 찾기
		
		$(선택자1).gt(index)					
			선택자1로 선택된 엘리먼트 중에 지정된 index보다 뒤에 위치하는 엘리먼트 찾기
		
		$(선택자1).not(선택자2)					
			선택자1로 선택된 엘리먼트 중에 선택자2에 해당하지 않는 엘리먼트 찾기
		
		$(선택자1).has(선택자2)					
			선택자1로 선택된 엘리먼트 중에 선택자2에 해당하는 자식을 가진 엘리먼트 찾기
		
		$(선택자1).contains(text)				
			선택자1로 선택된 엘리먼트 중에 지정한 텍스트를 포함하는 엘리먼트 찾기
		
		$(선택자1).is(선택자2)
			선택자1로 선택된 엘리먼트 중에 선택자2에 해당하면 true반환
		
		$(선택자1).first()						
			선택자1로 선택된 엘리먼트 중에 첫 번째 엘리먼트 찾기
		
		$(선택자1).last()						
			선택자1로 선택된 엘리먼트 중에 마지막 엘리먼트 찾기
		
		$(선택자1).add(선택자2)					
			선택자1로 선택된 엘리먼트 중에 선택자2로 선택된 엘리먼트를 합치기
		
		$(선택자1).필터함수(선택자2).조작함수1()					선택자1 + 선택자2 에 있는 엘리먼트 조작
								.end()								가장 마지막으로 필터된 선택자2를 제거, 선택자1만 선택된다
								.필터함수(선택자3).조작함수2()		선택자1 + 선택자3 에 해당하는 엘리먼트 조작
								
	
	jQuery의 이벤트 처리
		- 브라우저와 상관없이 일관된 방법의 이벤트 처리를 지원
		
		- 이벤트 등록
			$(선택자).on('이벤트이름', function() { ... } );
			$(선택자).one('이벤트이름', function() { ... } );
		
		- 이벤트 해체
			$(선택자).off('이벤트')
			
		- 이벤트 강제발생
			$(선택자).trigger('이벤트')
			
	이벤트 등록
		$(선택자).on('이벤트이름', function(e) {
			// 이벤트를 발생시킨 엘리먼트
		});
		
		$(선택자).click(function(e) {});
		$(선택자).keyup(function(e) {});
		$(선택자).keydown(function(e) {});
		$(선택자).keypress(function(e) {});
		
		$(선택자).mouseenter(function(e) {});
		$(선택자).mouseleave(function(e) {});
		$(선택자).mouseover(function(e) {});
		$(선택자).mouseout(function(e) {});
		$(선택자).hover(function(e) {});
		
		$(선택자).change(function(e) {});
		$(선택자).submit(function(e) {});
		$(선택자).focus(function(e) {});
		$(선택자).blur(function(e) {});
		
		$(선택자).resize(function(e) {});
		$(선택자).scroll(function(e) {});
		$(선택자).ready(function(e) {});
		
	jQuery 이벤트객체
		Event.type					발생한 이벤트의 종류를 반환한다
		Event.target				이벤트를 발생시킨 엘리먼트를 반환
		Event.pageX, Event.pageY	마우스 포인트의 x좌표, y좌표를 반환한다.
		Event.which					클릭한 마우스버튼 혹은 타이핑한 키보드 키의 번호를 반환한다
		Event.data					이벤트 핸들러 함수에 전달한 데이터를 반환한다
		
		Event.preventDefault()		이벤트와 관련된 액션의 실행을 방해한다
									<a>태그를 클릭했을 때 페이지를 이동하는 것 등
		
		
	jQuery 선택자
		form 요소 선택자
			:input			모든 폼 요소를 선택한다, input, select, textarea, checkbox, radio 등
			:text			input type="text"
			:password		input type="password"
			:radio			input type="radio"
			:checkbox		input type="checkbox"
			:submit			input type="submit"  ||   button type="submit"
			:reset			input type="reset
			:enabled		활성화된 폼 요소를 선택
			:file			input type="file"
			:disabled		비활성화된 폼 요소를 선택
			:selected		선택된 폼 요소를 반환한다
			:checked		체크된 폼 요소를 반환한다
			
		drag & drop
			1. 엘리먼트를 drag 가능한 엘리먼트로 지정한다
				<img draggable="true">
				
			2. ondragstart 이벤트 처리하기
				ondragstart는 엘리먼트를 drag시작할 때 발생하는 이벤트
				drag하는 엘리먼트의 정보를 저장, 전달하는 작업구현
			
			3. ondragover 이벤트 처리하기
				ondragover는 엘리먼트가 drop이 가능할 때 발생하는 이벤트
				기본적으로 모든 엘리먼트는 다른 엘리먼트가 drop되는 것을 방해한다
				ondragover 시점에 event.preventDefault()를 실행해 drop이 허용되게한다
				
			4. ondrop 이벤트 처리하기
				ondrop은 drag된 엘리먼트가 drop 될 때 발생하는 이벤트
				엘리먼트를 append 시키는 작업 구현
				
		$(셀렉터)
			셀렉터 표현식으로 검색된 엘리먼트를 가지는 jQuery결과집합
		$(엘리먼트)
			지정된 엘리먼트를 가지는 jQuery결과집합
		$("<tag></tag>")
			저장된 태그로 만들어진 엘리먼트 가지는 jQuery결과집합
		$(함수)
		
	jQuery의 AJAX 처리
		- jQuery는 ajax 처리를 위한 다양한 메소드를 제공한다
		- $.ajax()
			요청방식, 요청URL, 응답데이터타입, 응답성공시 실행할 함수, 응답실패시 실행할 함수 등을 지정
		- $.get()
			GET 방식 요청에 특화된 간편 메소드
		- $.post()
			POST 방식 요청에 특화된 간편 메소드
		- $.getJSON()
			$.ajax() 메소드의 응답데이터가 JSON인 경우에 특화된 간편 메소드
		- $.getScript()
			$.ajax() 의 메소드의 응답데이터가 JSONP인 경우에 특화된 간편 메소드
	
	$.ajax({
		type: '요청방식',							// 요청방식		GET, POST
		url: '요청url',								// 요청URL		AJAX 요청을 처리하는 서버 URL
		data: 서버로 보내는 데이터,					// 서버로 보내는 데이터: {이름: 값, 이름: 값, 이름: 값 ... }
		contentType: 서버로 보내는 데이터타입,		// 서버로 보내는 데이터타입: 기본값(application/x-www-form-urlencoded)
		dataType: 서버로부터 받는 응답데이터 타입	// 응답데이터의 타입: xml, json, text, jsonp
		succuess: function(result, status, xhr)		// 요청이 성공했을 때 수행하는 함수
		error: function(xhr, status, err)			// 요청이 실패했을 때 수행하는 함수
	})
	
	
	$.ajax({
		type: 'get',
		url: 'data.json',
		dataType: 'json',
			: function(events) {
			
		}
	});
	
	$.get('data.json', function(events) {}, 'json');
	
	$.getJSON('data.json', function(events) {} );

	jQuery effect
		$(셀렉터).hide(speed, callback)
		$(셀렉터).show(speed, callback)
		$(셀렉터).toggle(speed, callback)
		$(셀렉터).slideUp(speed, callback)
		$(셀렉터).slideDown(speed, callback)
		$(셀렉터).slideToggle(speed, callback)
		$(셀렉터).fadeOut(speed, callback)
		$(셀렉터).fadeIn(speed, callback)
		$(셀렉터).fadeToggle(speed, callback)
			speed		'slow', 'fast', 1000, 2000, 3000
			callback	effect 효과가 완료된 후에 실행될 함수
			
		$(셀렉터).animate({style}, speed, callback)
		
		$(셀렉터).stop()
			현재 실행중인 애니메이션 효과를 즉시 중단한다